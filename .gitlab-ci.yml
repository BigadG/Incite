stages:
  - test
  - build
  - deploy

cache:
  paths:
    - client/node_modules/
    - server/node_modules/

variables:
  MONGO_ATLAS_PASSWORD: $MONGO_ATLAS_PASSWORD
  JWT_SECRET: $JWT_SECRET
  DB_NAME: InciteDB
  HEROKU_API_KEY: $HEROKU_API_KEY
  HEROKU_APP_NAME: $HEROKU_APP_NAME
  VITE_API_BASE_URL: $VITE_API_BASE_URL
  HEROKU_CLIENT_APP_NAME: incite-client

test_server:
  stage: test
  image: node:16.20.0 # Specify a Node.js image that includes npm
  services:
    - mongo:latest
  variables:
    MONGO_URL: "mongodb://mongo:27017/$DB_NAME"
  script:
    - cd server
    - npm ci 
    - npm test
  only:
    - main
    - /^feature\/.*$/ # Enable tests for feature branches

test_client:
  stage: test
  image: node:16.20.0 # Ensure we use an image with npm for consistency
  script:
    - cd client
    - npm ci
    - npm test
  only:
    - main
    - /^feature\/.*$/

eslint_job:
  stage: test
  image: node:16.20.0 # Using Node.js image to ensure npm is available
  script:
    - echo "Linting Client..."
    - cd client
    - npm ci
    - npm run lint
    - echo "Linting Server..." 
    - cd ../server
    - npm ci
    - npm run lint
  only:
    - main
    - /^feature\/.*$/

build_client:
  stage: build
  image: node:16.20.0 # Use Node.js image
  script:
    - cd client
    - npm ci
    - npm run build
  artifacts:
    paths:
      - client/dist/
    expire_in: 1 week
  only:
    - main
    - /^feature\/.*$/


deploy_server_to_heroku: 
  stage: deploy
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
    - npm install -g heroku 
    - heroku container:login
    - heroku git:remote -a $HEROKU_APP_NAME
    - heroku container:push web -a $HEROKU_APP_NAME
    - heroku container:release web -a $HEROKU_APP_NAME
  only:
    - main

deploy_client_to_heroku:
  stage: deploy
  image: ruby:latest # Using Ruby image as it's commonly used for Heroku CLI operations in Docker
  script:
    - apt-get update && apt-get install -y curl gnupg build-essential
    - curl https://cli-assets.heroku.com/install.sh | sh # Installing Heroku CLI
    - heroku login -i
    - heroku git:remote -a $HEROKU_CLIENT_APP_NAME
    - cd client
    - npm ci
    - npm run build
    - git init
    - git config user.email "you@example.com"
    - git config user.name "Your Name"
    - git add dist 
    - git commit -m "Deploying Vite build"
    - git push --force heroku `git subtree split --prefix client/dist main`:refs/heads/main
  only:
    - main
